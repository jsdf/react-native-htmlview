{"version":3,"sources":["../src/HTMLView.js"],"names":["boldStyle","fontWeight","italicStyle","fontStyle","underlineStyle","textDecorationLine","strikethroughStyle","codeStyle","fontFamily","OS","baseStyles","create","b","strong","i","em","u","s","strike","pre","code","a","color","h1","fontSize","h2","h3","h4","h5","h6","htmlToElementOptKeys","HtmlView","state","element","mounted","startHtmlRender","props","value","nextProps","stylesheet","textComponentProps","style","addLineBreaks","onLinkPress","onLinkLongPress","renderNode","onError","setState","opts","linkHandler","linkLongPressHandler","styles","customRenderer","forEach","key","err","RootComponent","rootComponentProps","propTypes","bool","bullet","string","lineBreak","NodeComponent","func","nodeComponentProps","object","paragraphBreak","TextComponent","defaultProps","openURL","url","console","error","bind"],"mappings":"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","file":"HTMLView.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport htmlToElement from './htmlToElement';\nimport {Linking, Platform, StyleSheet, View, ViewPropTypes} from 'react-native';\n\nconst boldStyle = {fontWeight: '500'};\nconst italicStyle = {fontStyle: 'italic'};\nconst underlineStyle = {textDecorationLine: 'underline'};\nconst strikethroughStyle = {textDecorationLine: 'line-through'};\nconst codeStyle = {fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace'};\n\nconst baseStyles = StyleSheet.create({\n  b: boldStyle,\n  strong: boldStyle,\n  i: italicStyle,\n  em: italicStyle,\n  u: underlineStyle,\n  s: strikethroughStyle,\n  strike: strikethroughStyle,\n  pre: codeStyle,\n  code: codeStyle,\n  a: {\n    fontWeight: '500',\n    color: '#007AFF',\n  },\n  h1: {fontWeight: '500', fontSize: 36},\n  h2: {fontWeight: '500', fontSize: 30},\n  h3: {fontWeight: '500', fontSize: 24},\n  h4: {fontWeight: '500', fontSize: 18},\n  h5: {fontWeight: '500', fontSize: 14},\n  h6: {fontWeight: '500', fontSize: 12},\n});\n\nconst htmlToElementOptKeys = [\n  'lineBreak',\n  'paragraphBreak',\n  'bullet',\n  'TextComponent',\n  'textComponentProps',\n  'NodeComponent',\n  'nodeComponentProps',\n];\n\nclass HtmlView extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      element: null,\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.startHtmlRender(this.props.value);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.value !== nextProps.value ||\n      this.props.stylesheet !== nextProps.stylesheet ||\n      this.props.textComponentProps !== nextProps.textComponentProps\n    ) {\n      this.startHtmlRender(\n        nextProps.value,\n        nextProps.stylesheet,\n        nextProps.textComponentProps\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  startHtmlRender(value, style, textComponentProps) {\n    const {\n      addLineBreaks,\n      onLinkPress,\n      onLinkLongPress,\n      stylesheet,\n      renderNode,\n      onError,\n    } = this.props;\n\n    if (!value) {\n      this.setState({element: null});\n    }\n\n    const opts = {\n      addLineBreaks,\n      linkHandler: onLinkPress,\n      linkLongPressHandler: onLinkLongPress,\n      styles: {...baseStyles, ...stylesheet, ...style},\n      customRenderer: renderNode,\n    };\n\n    htmlToElementOptKeys.forEach(key => {\n      if (typeof this.props[key] !== 'undefined') {\n        opts[key] = this.props[key];\n      }\n    });\n\n    if (textComponentProps) {\n      opts.textComponentProps = textComponentProps;\n    }\n\n    htmlToElement(value, opts, (err, element) => {\n      if (err) {\n        onError(err);\n      }\n\n      if (this.mounted) {\n        this.setState({element});\n      }\n    });\n  }\n\n  render() {\n    const {RootComponent, style} = this.props;\n    const {element} = this.state;\n    if (element) {\n      return (\n        <RootComponent {...this.props.rootComponentProps} style={style}>\n          {element}\n        </RootComponent>\n      );\n    }\n    return <RootComponent {...this.props.rootComponentProps} style={style} />;\n  }\n}\n\nHtmlView.propTypes = {\n  addLineBreaks: PropTypes.bool,\n  bullet: PropTypes.string,\n  lineBreak: PropTypes.string,\n  NodeComponent: PropTypes.func,\n  nodeComponentProps: PropTypes.object,\n  onError: PropTypes.func,\n  onLinkPress: PropTypes.func,\n  onLinkLongPress: PropTypes.func,\n  paragraphBreak: PropTypes.string,\n  renderNode: PropTypes.func,\n  RootComponent: PropTypes.func,\n  rootComponentProps: PropTypes.object,\n  style: ViewPropTypes.style,\n  stylesheet: PropTypes.object,\n  TextComponent: PropTypes.func,\n  textComponentProps: PropTypes.object,\n  value: PropTypes.string,\n};\n\nHtmlView.defaultProps = {\n  addLineBreaks: true,\n  onLinkPress: url => Linking.openURL(url),\n  onLinkLongPress: null,\n  onError: console.error.bind(console),\n  RootComponent: element => <View {...element} />, // eslint-disable-line react/display-name\n};\n\nexport default HtmlView;\n"]}