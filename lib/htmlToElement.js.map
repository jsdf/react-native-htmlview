{"version":3,"sources":["../src/htmlToElement.js"],"names":["htmlToElement","defaultOpts","lineBreak","paragraphBreak","bullet","TextComponent","textComponentProps","NodeComponent","nodeComponentProps","Img","width","parseInt","props","attribs","height","imgStyle","source","uri","src","rawHtml","customOpts","done","opts","inheritedStyle","parent","style","flatten","styles","name","parentStyle","domToElement","dom","renderNode","customRenderer","orderedListCounter","map","node","index","list","rendered","type","defaultStyle","customStyle","decodeHTML","data","linkPressHandler","linkLongPressHandler","href","linkHandler","linebreakBefore","linebreakAfter","addLineBreaks","length","listItemPrefix","children","handler","DomHandler","err","parser","Parser","write"],"mappings":"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","file":"htmlToElement.js","sourcesContent":["import React from 'react';\nimport {StyleSheet, Text} from 'react-native';\nimport htmlparser from 'htmlparser2-without-node-native';\nimport entities from 'entities';\n\nimport AutoSizedImage from './AutoSizedImage';\n\nconst defaultOpts = {\n  lineBreak: '\\n',\n  paragraphBreak: '\\n\\n',\n  bullet: '\\u2022 ',\n  TextComponent: Text,\n  textComponentProps: null,\n  NodeComponent: Text,\n  nodeComponentProps: null,\n};\n\nconst Img = props => {\n  const width =\n    parseInt(props.attribs['width'], 10) ||\n    parseInt(props.attribs['data-width'], 10) ||\n    0;\n  const height =\n    parseInt(props.attribs['height'], 10) ||\n    parseInt(props.attribs['data-height'], 10) ||\n    0;\n\n  const imgStyle = {\n    width,\n    height,\n  };\n\n  const source = {\n    uri: props.attribs.src,\n    width,\n    height,\n  };\n  return <AutoSizedImage source={source} style={imgStyle} />;\n};\n\nexport default function htmlToElement(rawHtml, customOpts = {}, done) {\n  const opts = {\n    ...defaultOpts,\n    ...customOpts,\n  };\n\n  function inheritedStyle(parent) {\n    if (!parent) return null;\n    const style = StyleSheet.flatten(opts.styles[parent.name]) || {};\n    const parentStyle = inheritedStyle(parent.parent) || {};\n    return {...parentStyle, ...style};\n  }\n\n  function domToElement(dom, parent) {\n    if (!dom) return null;\n\n    const renderNode = opts.customRenderer;\n    let orderedListCounter = 1;\n\n    return dom.map((node, index, list) => {\n      if (renderNode) {\n        const rendered = renderNode(node, index, list, parent, domToElement);\n        if (rendered || rendered === null) return rendered;\n      }\n\n      const {TextComponent} = opts;\n\n      if (node.type === 'text') {\n        const defaultStyle = opts.textComponentProps\n          ? opts.textComponentProps.style\n          : null;\n        const customStyle = inheritedStyle(parent);\n\n        return (\n          <TextComponent\n            {...opts.textComponentProps}\n            key={index}\n            style={[defaultStyle, customStyle]}\n          >\n            {entities.decodeHTML(node.data)}\n          </TextComponent>\n        );\n      }\n\n      if (node.type === 'tag') {\n        if (node.name === 'img') {\n          return <Img key={index} attribs={node.attribs} />;\n        }\n\n        let linkPressHandler = null;\n        let linkLongPressHandler = null;\n        if (node.name === 'a' && node.attribs && node.attribs.href) {\n          linkPressHandler = () =>\n            opts.linkHandler(entities.decodeHTML(node.attribs.href));\n          if (opts.linkLongPressHandler) {\n            linkLongPressHandler = () =>\n              opts.linkLongPressHandler(entities.decodeHTML(node.attribs.href));\n          }\n        }\n\n        let linebreakBefore = null;\n        let linebreakAfter = null;\n        if (opts.addLineBreaks) {\n          switch (node.name) {\n            case 'pre':\n              linebreakBefore = opts.lineBreak;\n              break;\n            case 'p':\n              if (index < list.length - 1) {\n                linebreakAfter = opts.paragraphBreak;\n              }\n              break;\n            case 'br':\n            case 'h1':\n            case 'h2':\n            case 'h3':\n            case 'h4':\n            case 'h5':\n              linebreakAfter = opts.lineBreak;\n              break;\n          }\n        }\n\n        let listItemPrefix = null;\n        if (node.name === 'li') {\n          const defaultStyle = opts.textComponentProps\n            ? opts.textComponentProps.style\n            : null;\n          const customStyle = inheritedStyle(parent);\n\n          if (parent.name === 'ol') {\n            listItemPrefix = (\n              <TextComponent style={[defaultStyle, customStyle]}>\n                {`${orderedListCounter++}. `}\n              </TextComponent>\n            );\n          } else if (parent.name === 'ul') {\n            listItemPrefix = (\n              <TextComponent style={[defaultStyle, customStyle]}>\n                {opts.bullet}\n              </TextComponent>\n            );\n          }\n          if (opts.addLineBreaks && index < list.length - 1) {\n            linebreakAfter = opts.lineBreak;\n          }\n        }\n\n        const {NodeComponent, styles} = opts;\n\n        return (\n          <NodeComponent\n            {...opts.nodeComponentProps}\n            key={index}\n            onPress={linkPressHandler}\n            style={!node.parent ? styles[node.name] : null}\n            onLongPress={linkLongPressHandler}\n          >\n            {linebreakBefore}\n            {listItemPrefix}\n            {domToElement(node.children, node)}\n            {linebreakAfter}\n          </NodeComponent>\n        );\n      }\n    });\n  }\n\n  const handler = new htmlparser.DomHandler(function(err, dom) {\n    if (err) done(err);\n    done(null, domToElement(dom));\n  });\n  const parser = new htmlparser.Parser(handler);\n  parser.write(rawHtml);\n  parser.done();\n}\n"]}